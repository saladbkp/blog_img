alert tcp any any -> $HOME_NET any (msg:"Nmap TCP Scan Detected"; flags:S; sid:1000001; rev:1;)
alert ip any any -> $HOME_NET any (msg:"Possible Nmap Scan"; dsize:0; flags:S; sid:1000002; rev:1;)
alert udp 192.168.200.1 any -> $HOME_NET 53 (msg:"DNS request"; sid:1000002;)
alert tcp 192.168.200.4 any -> $HOME_NET 80 (msg:"HTTP traffic from web server"; sid:1000001;)

# === Preprocessor Settings ===
preprocessor stream5_global: track_tcp yes, track_udp yes
preprocessor stream5_tcp: policy windows, detect_anomalies, require_3whs 180
preprocessor stream5_udp: timeout 180
preprocessor http_inspect: global iis_unicode_map unicode.map 1252
preprocessor http_inspect_server: server default profile all ports { 80 8080 8180 }
preprocessor frag3_global: max_frags 65536
preprocessor frag3_engine: policy windows detect_anomalies
preprocessor sfportscan: proto { all } memcap 10000000 sense_level medium


# Network Definitions
var HOME_NET 192.168.200.0/24  # Adjust to your internal network IP range
var EXTERNAL_NET !$HOME_NET  # Anything outside HOME_NET
var DNS_SERVERS [192.168.200.1,8.8.8.8]  # DNS servers for traffic monitoring
var HTTP_SERVERS [192.168.200.4]  # Example web server IP address

# Interface configuration
config interface: enp0s3

# Rule File Definitions
include $RULE_PATH/local.rules
include $RULE_PATH/community.rules  # If you have downloaded the community rules
include $RULE_PATH/emerging-all.rules  # Add more rules if needed

# Memory settings
config memory_limit: 256  # Memory limit in MB

# Log file output
output alert_fast: /var/log/snort/alert  # Where alerts are logged

# Final configuration options
config policy_mode: normal  # Or 'inline' if using Snort in IPS mode



https://kifarunix.com/install-and-configure-snort-3-on-rocky-linux/

✅ 1. Install Dependencies
bash
Copy
Edit
sudo dnf install -y epel-release
sudo dnf groupinstall -y "Development Tools"
sudo dnf install -y libpcap-devel pcre-devel libdnet-devel tcpdump \
    libdnet libdnet-devel zlib zlib-devel libnghttp2-devel \
    luajit luajit-devel openssl-devel
✅ 2. Create a Snort User
bash
Copy
Edit
sudo groupadd snort
sudo useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort
✅ 3. Download and Install DAQ (Data Acquisition Library)
bash
Copy
Edit
cd /tmp
wget https://www.snort.org/downloads/snort/daq-2.0.7.tar.gz
tar -xvzf daq-2.0.7.tar.gz
cd daq-2.0.7
./configure && make && sudo make install
✅ 4. Download and Install Snort
bash
Copy
Edit
cd /tmp
wget https://www.snort.org/downloads/snort/snort-2.9.20.tar.gz
tar -xvzf snort-2.9.20.tar.gz
cd snort-2.9.20
./configure --enable-sourcefire && make && sudo make install
✅ 5. Create Configuration Directories
bash
Copy
Edit
sudo mkdir -p /etc/snort/rules
sudo mkdir -p /var/log/snort
sudo mkdir -p /usr/local/lib/snort_dynamicrules
sudo touch /etc/snort/rules/white_list.rules
sudo touch /etc/snort/rules/black_list.rules
sudo touch /etc/snort/snort.conf
✅ 6. Download Snort Rules
Register at: https://www.snort.org/users/sign_up
Then get your Oinkcode and download the community rules:

bash
Copy
Edit
cd /tmp
wget https://www.snort.org/downloads/community/snort3-community-rules.tar.gz
tar -xvzf snort3-community-rules.tar.gz
sudo cp -r community-rules/* /etc/snort/rules/
✅ 7. Basic Configuration File (snort.conf)
You can start with this minimal config:

bash
Copy
Edit
sudo nano /etc/snort/snort.conf
Paste:


var RULE_PATH /etc/snort/rules

include $RULE_PATH/community-rules/snort3-community.rules
✅ 8. Test Snort
To test Snort with basic detection:

bash
Copy
Edit
sudo snort -A console -q -c /etc/snort/snort.conf -i <your-interface>
Replace <your-interface> with the actual interface name, e.g., eth0 or ens33.

Find your interface name with:

bash
Copy
Edit
ip a
✅ 9. Log Management
Snort logs to /var/log/snort/ — you can inspect alerts here or use barnyard2 if you want to parse logs into databases (optional advanced setup).

✅ 10. Optional: Run Snort as a Systemd Service
If you want to run Snort continuously in the background, I can help you set up a systemd service unit.
